package Lessons.Lesson10.Import_statement;
import Homework.Homework7.Employe2.Tortelli;
import Lessons.Lesson9.Car; //так мы импортируем класс из другого пакета в нашу программу. Пишем import + полное имя
                    //нужного нам класса. После мы можем вызывать его просто по имени класса.

import Homework.Homework8.Pokko; // //в нашем классе может быть несколько import statement.

import  Homework.Homework7.*; //что бы импортировать абсолютно все классы нужного нам пакета пишем его адрес и вместо имени
                           //класса пишем звездочку и точку с запятой "Homework7.*;"
public class Import_ {
 //   Import позволяет нам импортировать класс из другого пакета в нашу программу и вызывать его не по полному имени
    //( имя пакета + имя класса), а просто по имени класса:
 public static void main(String[] args) {
     Lessons.Lesson9.Car c1 = new Lessons.Lesson9.Car("black","V6"); //так бы мы вызывали каждый раз без
                                       //import. Полное имя класса Car.
     Car c = new Car("black","V6"); //так можно вызывать с импортом.


     Tortelli t = new Tortelli(); //успешно импортировались все классы из Homework7,с помощью "*".

     //Разумеется нужно смотреть на acces modifier. C public мы импортируем без проблем, а вот уже с defolt нужно быть
            //внимательным,так как дефолт не виден в других пакетах.

     //Бывает ситуация,когда мы импортируем два или более пакетов в которых есть классы с одинаковым именем,в таком случае
     //джава не понимает конкретно какой класс из разных пакетов вызвать (ведь имени одинаковые). При таких ситуациях,
     //даже если мы уже и импортировали нужные нам пакеты в создании того же конструктора с одинаковыми именами классов
     //нужно использовать их полные имена.

     /* Если пытаться импортировать только классы с одинаковыми именами:
     import Homework.Homework7.Car;
     import Lessons.Lesson9.Car;
           то компилятор не даст нам этого сделать. Хоть и их полные имена разные ,одинаковые сами имена классов
           джава не позволит нам это сделать.*/

     //Но import импортирует только классы. Если в импортируемом нами пакете будут другие пакеты он их проигнорирует,
     //и классы в других пакетах соответственно тоже и мы их не сможем вызвать.
     Pokko p = new Pokko();
     System.out.println(Pokko.Pi); //если переменная public я могу её спокойно вызывать при создании конструктора.
     //ели переменная статическая перед её именем желательно использовать имя класса.
     System.out.println(p.l10); //не статичные переменные желательно использовать с именем конструктора,
     // но можно и с названием класса.


 }
}

class B{
    Pokko p1 = new Pokko(); //statement import распространяется на весь файл. Его нужно писать после
    // Packege (если он есть) и перед классом.

    //Всегда по дефолту джава пишет свой импорт,который мы не видим "java.lang.*;" - она импортирует такие классы как
    //String, System и тд. Именно поэтому мы можем их всегда использовать без их создания.

    java.lang.String s = new java.lang.String("Hello");
    String s1 = new String("Hi!"); // Можно писать и так и так,разницы нет.
}
